# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest


steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'  # Python verzió, itt 3.x verziót használunk
    addToPath: true

- script: |
    python -m venv venv  # Virtuális környezet létrehozása
    source venv/bin/activate  # Aktiváljuk a virtuális környezetet
    pip install -r requirements.txt  # Függőségek telepítése
  displayName: 'Set up Python environment and install dependencies'

- script: |
    source venv/bin/activate  # Aktiváljuk a virtuális környezetet
    flask run --host=0.0.0.0 --port=8080  # Flask alkalmazás indítása
  displayName: 'Run Flask application'
  env:
    FLASK_APP: 'app.py'  # Itt add meg a Flask alkalmazásod fő fájlját (pl. app.py)
    FLASK_ENV: 'development'  # Fejlesztői környezet (változtatható)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'  # Artifaktumok tárolása
    ArtifactName: 'drop'
    publishLocation: 'Container'
